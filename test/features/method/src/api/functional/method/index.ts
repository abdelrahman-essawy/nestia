/**
 * @packageDocumentation
 * @module api.functional.method
 * @nestia Generated by Nestia - https://github.com/samchon/nestia 
 */
//================================================================
import type { IConnection } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";

/**
 * @controller MethodController.head
 * @path HEAD /method/head
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function head(
    connection: IConnection,
): Promise<void> {
    return !!connection.simulate
        ? head.simulate(
              connection,
          )
        : PlainFetcher.fetch(
              connection,
              {
                  ...head.METADATA,
                  path: head.path(),
              } as const,
          );
}
export namespace head {

    export const METADATA = {
        method: "HEAD",
        path: "/method/head",
        request: null,
        response: null,
        status: null,
    } as const;

    export const path = (): string => {
        return `/method/head`;
    }
    export const simulate = async (
        _connection: IConnection,
    ): Promise<void> => {
    }
}