{
  "openapi": "3.0.1",
  "servers": [
    {
      "url": "https://github.com/samchon/nestia",
      "description": "insert your server url"
    }
  ],
  "info": {
    "version": "0.0.0-dev.20991231",
    "title": "@nestia/test",
    "description": "Test program of Nestia",
    "license": {
      "name": "MIT"
    }
  },
  "paths": {
    "/health": {
      "get": {
        "tags": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "x-nestia-encrypted": false
          }
        },
        "x-nestia-namespace": "health.get",
        "x-nestia-jsDocTags": [],
        "x-nestia-method": "GET"
      }
    },
    "/performance": {
      "get": {
        "tags": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPerformance"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "x-nestia-namespace": "performance.get",
        "x-nestia-jsDocTags": [],
        "x-nestia-method": "GET"
      }
    },
    "/sellers/authenticate/join": {
      "post": {
        "tags": [],
        "parameters": [],
        "requestBody": {
          "description": "## Warning\n\nRequest body must be encrypted.\n\nThe request body data would be encrypted as \"AES-128(256) / CBC mode / PKCS#5 Padding / Base64 Encoding\", through the [EncryptedBody](https://github.com/samchon/@nestia/core#encryptedbody) component.\n\nTherefore, just utilize this swagger editor only for referencing. If you need to call the real API, using [SDK](https://github.com/samchon/nestia#software-development-kit) would be much better.\n----------------\nInformation of yours",
          "content": {
            "text/plain": {
              "schema": {
                "$ref": "#/components/schemas/ISeller.IJoin"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": true
        },
        "responses": {
          "201": {
            "description": "## Warning\n\nRequest body must be encrypted.\n\nThe request body data would be encrypted as \"AES-128(256) / CBC mode / PKCS#5 Padding / Base64 Encoding\", through the [EncryptedBody](https://github.com/samchon/@nestia/core#encryptedbody) component.\n\nTherefore, just utilize this swagger editor only for referencing. If you need to call the real API, using [SDK](https://github.com/samchon/nestia#software-development-kit) would be much better.\n----------------\nInformation of newly joined seller",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ISeller.IAuthorized"
                }
              }
            },
            "x-nestia-encrypted": true
          }
        },
        "summary": "Join as a seller",
        "description": "Join as a seller.",
        "x-nestia-namespace": "sellers.authenticate.join.join",
        "x-nestia-jsDocTags": [
          {
            "name": "param",
            "text": [
              {
                "text": "input",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "Information of yours",
                "kind": "text"
              }
            ]
          },
          {
            "name": "return",
            "text": [
              {
                "text": "Information of newly joined seller",
                "kind": "text"
              }
            ]
          },
          {
            "name": "setHeader",
            "text": [
              {
                "text": "authorization.token Authorization",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "POST"
      }
    },
    "/sellers/authenticate/login": {
      "post": {
        "tags": [],
        "parameters": [],
        "requestBody": {
          "description": "## Warning\n\nRequest body must be encrypted.\n\nThe request body data would be encrypted as \"AES-128(256) / CBC mode / PKCS#5 Padding / Base64 Encoding\", through the [EncryptedBody](https://github.com/samchon/@nestia/core#encryptedbody) component.\n\nTherefore, just utilize this swagger editor only for referencing. If you need to call the real API, using [SDK](https://github.com/samchon/nestia#software-development-kit) would be much better.\n----------------\nEmail and password",
          "content": {
            "text/plain": {
              "schema": {
                "$ref": "#/components/schemas/ISeller.ILogin"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": true
        },
        "responses": {
          "201": {
            "description": "## Warning\n\nRequest body must be encrypted.\n\nThe request body data would be encrypted as \"AES-128(256) / CBC mode / PKCS#5 Padding / Base64 Encoding\", through the [EncryptedBody](https://github.com/samchon/@nestia/core#encryptedbody) component.\n\nTherefore, just utilize this swagger editor only for referencing. If you need to call the real API, using [SDK](https://github.com/samchon/nestia#software-development-kit) would be much better.\n----------------\nInformation of the seller",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ISeller.IAuthorized"
                }
              }
            },
            "x-nestia-encrypted": true
          }
        },
        "summary": "Log-in as a seller",
        "description": "Log-in as a seller.",
        "x-nestia-namespace": "sellers.authenticate.login.login",
        "x-nestia-jsDocTags": [
          {
            "name": "param",
            "text": [
              {
                "text": "input",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "Email and password",
                "kind": "text"
              }
            ]
          },
          {
            "name": "return",
            "text": [
              {
                "text": "Information of the seller",
                "kind": "text"
              }
            ]
          },
          {
            "name": "assignHeaders",
            "text": [
              {
                "text": "authorization",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "POST"
      }
    },
    "/sellers/authenticate/password/change": {
      "patch": {
        "tags": [],
        "parameters": [],
        "requestBody": {
          "description": "## Warning\n\nRequest body must be encrypted.\n\nThe request body data would be encrypted as \"AES-128(256) / CBC mode / PKCS#5 Padding / Base64 Encoding\", through the [EncryptedBody](https://github.com/samchon/@nestia/core#encryptedbody) component.\n\nTherefore, just utilize this swagger editor only for referencing. If you need to call the real API, using [SDK](https://github.com/samchon/nestia#software-development-kit) would be much better.\n----------------\nOld and new passwords",
          "content": {
            "text/plain": {
              "schema": {
                "$ref": "#/components/schemas/ISeller.IChangePassword"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": true
        },
        "responses": {
          "201": {
            "description": "Empty object",
            "x-nestia-encrypted": false
          }
        },
        "summary": "Change password",
        "description": "Change password.",
        "x-nestia-namespace": "sellers.authenticate.password.change.change",
        "x-nestia-jsDocTags": [
          {
            "name": "param",
            "text": [
              {
                "text": "input",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "Old and new passwords",
                "kind": "text"
              }
            ]
          },
          {
            "name": "return",
            "text": [
              {
                "text": "Empty object",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "PATCH"
      }
    },
    "/sellers/authenticate/exit": {
      "delete": {
        "tags": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "x-nestia-encrypted": false
          }
        },
        "summary": "Erase the seller by itself",
        "description": "Erase the seller by itself.",
        "x-nestia-namespace": "sellers.authenticate.exit.exit",
        "x-nestia-jsDocTags": [],
        "x-nestia-method": "DELETE"
      }
    }
  },
  "components": {
    "schemas": {
      "IPerformance": {
        "type": "object",
        "properties": {
          "cpu": {
            "$ref": "#/components/schemas/process.global.NodeJS.CpuUsage"
          },
          "memory": {
            "$ref": "#/components/schemas/process.global.NodeJS.MemoryUsage"
          },
          "resource": {
            "$ref": "#/components/schemas/process.global.NodeJS.ResourceUsage"
          }
        },
        "nullable": false,
        "required": [
          "cpu",
          "memory",
          "resource"
        ],
        "description": "Performance info.",
        "x-typia-jsDocTags": [
          {
            "name": "author",
            "text": [
              {
                "text": "Samchon",
                "kind": "text"
              }
            ]
          }
        ]
      },
      "process.global.NodeJS.CpuUsage": {
        "type": "object",
        "properties": {
          "user": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "system": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          }
        },
        "nullable": false,
        "required": [
          "user",
          "system"
        ],
        "x-typia-jsDocTags": []
      },
      "process.global.NodeJS.MemoryUsage": {
        "type": "object",
        "properties": {
          "rss": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "heapTotal": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "heapUsed": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "external": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "arrayBuffers": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          }
        },
        "nullable": false,
        "required": [
          "rss",
          "heapTotal",
          "heapUsed",
          "external",
          "arrayBuffers"
        ],
        "x-typia-jsDocTags": []
      },
      "process.global.NodeJS.ResourceUsage": {
        "type": "object",
        "properties": {
          "fsRead": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "fsWrite": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "involuntaryContextSwitches": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "ipcReceived": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "ipcSent": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "majorPageFault": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "maxRSS": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "minorPageFault": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "sharedMemorySize": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "signalsCount": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "swappedOut": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "systemCPUTime": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "unsharedDataSize": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "unsharedStackSize": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "userCPUTime": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "voluntaryContextSwitches": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          }
        },
        "nullable": false,
        "required": [
          "fsRead",
          "fsWrite",
          "involuntaryContextSwitches",
          "ipcReceived",
          "ipcSent",
          "majorPageFault",
          "maxRSS",
          "minorPageFault",
          "sharedMemorySize",
          "signalsCount",
          "swappedOut",
          "systemCPUTime",
          "unsharedDataSize",
          "unsharedStackSize",
          "userCPUTime",
          "voluntaryContextSwitches"
        ],
        "x-typia-jsDocTags": []
      },
      "ISeller.IJoin": {
        "type": "object",
        "properties": {
          "email": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "password": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "name": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "mobile": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "company": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          }
        },
        "nullable": false,
        "required": [
          "email",
          "password",
          "name",
          "mobile",
          "company"
        ],
        "x-typia-jsDocTags": []
      },
      "ISeller.IAuthorized": {
        "type": "object",
        "properties": {
          "authorization": {
            "$ref": "#/components/schemas/__type"
          },
          "id": {
            "description": "Primary key.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "number"
          },
          "email": {
            "description": "Email address.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "name": {
            "description": "Name of the seller.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "mobile": {
            "description": "Mobile number of the seller.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "company": {
            "description": "Belonged company name.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "created_at": {
            "description": "Joined time.",
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          }
        },
        "nullable": false,
        "required": [
          "authorization",
          "id",
          "email",
          "name",
          "mobile",
          "company",
          "created_at"
        ],
        "x-typia-jsDocTags": []
      },
      "__type": {
        "type": "object",
        "properties": {
          "token": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "expires_at": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          }
        },
        "nullable": false,
        "required": [
          "token",
          "expires_at"
        ],
        "x-typia-jsDocTags": []
      },
      "ISeller.ILogin": {
        "type": "object",
        "properties": {
          "email": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "password": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          }
        },
        "nullable": false,
        "required": [
          "email",
          "password"
        ],
        "x-typia-jsDocTags": []
      },
      "ISeller.IChangePassword": {
        "type": "object",
        "properties": {
          "old_password": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          },
          "new_password": {
            "x-typia-required": true,
            "x-typia-optional": false,
            "type": "string"
          }
        },
        "nullable": false,
        "required": [
          "old_password",
          "new_password"
        ],
        "x-typia-jsDocTags": []
      }
    },
    "securitySchemes": {
      "bearer": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization"
      }
    }
  }
}